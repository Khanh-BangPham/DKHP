/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views.NhanVienPDT;
import dao.GiangVienDAO;
import dao.HocViDAO;
import entity.HocVi;
import dao.QueQuanDAO;
import entity.QueQuan;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import entity.GiangVien;
import java.lang.Object;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import java.lang.Integer;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.ResolverStyle;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
/**
 *
 * @author PC
 */
public class GiangVienView extends javax.swing.JPanel {
    /**
     * Creates new form GiangVien
     */
    public void fillDataTable(List<GiangVien> listgv){        
        QueQuanDAO qqdao = new QueQuanDAO();
        List<QueQuan> listqq = qqdao.getListQueQuan();
        HocViDAO hvdao = new HocViDAO();
        List<HocVi> listhv = hvdao.getListHocVi();
        int i = 1;
        DefaultTableModel model = (DefaultTableModel) tableGiangVien.getModel();
        model.setRowCount(0);
        for(GiangVien gv : listgv){
            Object dataRow[] = new Object[12];
            dataRow[0] = i++;
            dataRow[1] = gv.getMaGV();
            dataRow[2] = gv.getHo() + " " + (gv.getTenDem() == null ? "" : gv.getTenDem() + " ") + gv.getTen();
            dataRow[3] = gv.getNgaySinh();
            
            for(HocVi hv: listhv){
                if(gv.getMaHocVi().equals(hv.getMaHocVi())){
                    dataRow[4] = hv.getTenHocVi();
                }
            }
            dataRow[5] = gv.isNghiLam();
            for(QueQuan qq: listqq){
                if(qq.getMaQQ() == gv.getmaQQ()){
                    dataRow[6] = qq.getTenQQ();                    
                }
            }
            dataRow[7] = gv.getSoDienThoai1();
            dataRow[8] = gv.getSoDienThoai2();
            dataRow[9] = gv.getEmail1();
            dataRow[10] = gv.getEmail2();
            dataRow[11] = gv.getGhiChu();
            model.addRow(dataRow);
        }
        model.fireTableDataChanged();
    }

    public void fillComboBoxQuequan(){
        QueQuanDAO qqdao = new QueQuanDAO();
        List<QueQuan> listqq = qqdao.getListQueQuan();
        comboBoxMaQQ.removeAllItems();
        comboBoxMaQQ.addItem("null - null");
        for(QueQuan qq : listqq){
            String elm = qq.getMaQQ() + " " + qq.getTenQQ();
            comboBoxMaQQ.addItem(elm);
        }
    }
    public void fillComboBoxHocVi(){
        HocViDAO hvdao = new HocViDAO();
        List<HocVi> listhv = hvdao.getListHocVi();
        comboBoxHocVi.removeAllItems();
        comboBoxHocVi.addItem("null - null");
        for(HocVi hv: listhv){
            String elm = hv.getMaHocVi() + " - " + hv.getTenHocVi();
            comboBoxHocVi.addItem(elm);
        }
    }
    public GiangVienView() {
        GiangVienDAO gvdao = new GiangVienDAO();
        List<GiangVien> listgv = gvdao.getListGiangVien();        
        initComponents();
        resetModel();
        fillComboBoxQuequan();
        fillComboBoxHocVi();
        fillDataTable(listgv);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaGV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHoVaTen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNghiLam = new javax.swing.JCheckBox();
        comboBoxMaQQ = new javax.swing.JComboBox<>();
        comboBoxHocVi = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtSoDienThoai1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSoDienThoai2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEmail1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEmail2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGiangVien = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Giảng Viên");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        jPanel3.setLayout(null);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Mã Giảng Viên");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(0, 10, 90, 40);

        txtMaGV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaGV.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMaGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaGVActionPerformed(evt);
            }
        });
        jPanel3.add(txtMaGV);
        txtMaGV.setBounds(110, 10, 260, 40);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Họ và tên");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(0, 60, 90, 40);

        txtHoVaTen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel3.add(txtHoVaTen);
        txtHoVaTen.setBounds(110, 60, 260, 40);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ngày sinh");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(0, 110, 90, 40);

        txtNgaySinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNgaySinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgaySinhActionPerformed(evt);
            }
        });
        jPanel3.add(txtNgaySinh);
        txtNgaySinh.setBounds(110, 110, 260, 40);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Học vị");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(0, 160, 90, 40);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Quê quán");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(0, 210, 90, 40);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Nghỉ làm");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(10, 260, 90, 40);

        txtNghiLam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNghiLamActionPerformed(evt);
            }
        });
        jPanel3.add(txtNghiLam);
        txtNghiLam.setBounds(110, 260, 260, 40);

        comboBoxMaQQ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboBoxMaQQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(comboBoxMaQQ);
        comboBoxMaQQ.setBounds(110, 210, 260, 40);

        comboBoxHocVi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboBoxHocVi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(comboBoxHocVi);
        comboBoxHocVi.setBounds(110, 162, 260, 40);

        jPanel4.setLayout(null);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Số điện thoại 1");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(0, 10, 90, 40);

        txtSoDienThoai1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtSoDienThoai1);
        txtSoDienThoai1.setBounds(100, 10, 260, 40);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Số điện thoại 2");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(0, 60, 90, 40);

        txtSoDienThoai2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtSoDienThoai2);
        txtSoDienThoai2.setBounds(100, 60, 260, 40);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Email 1");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(10, 110, 80, 40);

        txtEmail1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtEmail1);
        txtEmail1.setBounds(100, 110, 260, 40);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Email 2");
        jPanel4.add(jLabel11);
        jLabel11.setBounds(10, 160, 80, 40);

        txtEmail2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtEmail2);
        txtEmail2.setBounds(100, 160, 260, 40);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Ghi Chú");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(10, 210, 80, 40);

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(100, 210, 260, 90);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 40, 10));

        btnInsert.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnInsert.setText("Thêm");
        btnInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel5.add(btnInsert);

        btnEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel5.add(btnEdit);

        btnFind.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFind.setText("Tìm kiếm");
        btnFind.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        jPanel5.add(btnFind);

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel5.add(btnDelete);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tableGiangVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null, null, null, null, null, null, null, null, null, null},
                {"2", null, null, null, null, null, null, null, null, null, null},
                {"3", null, null, null, null, null, null, null, null, null, null},
                {"4", null, null, null, null, null, null, null, null, null, null},
                {"5", null, null, null, null, null, null, null, null, null, null},
                {"6", null, null, null, null, null, null, null, null, null, null},
                {"7", null, null, null, null, null, null, null, null, null, null},
                {"8", null, null, null, null, null, null, null, null, null, null},
                {"9", null, null, null, null, null, null, null, null, null, null},
                {"10", null, null, null, null, null, null, null, null, null, null},
                {"11", null, null, null, null, null, null, null, null, null, null},
                {"12", null, null, null, null, null, null, null, null, null, null},
                {"13", null, null, null, null, null, null, null, null, null, null},
                {"14", null, null, null, null, null, null, null, null, null, null},
                {"15", null, null, null, null, null, null, null, null, null, null},
                {"16", null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Giảng Viên", "Họ và tên", "Ngày sinh", "Học vị", "Nghỉ làm", "Quê Quán", "Số điện thoại 1", "Số điện thoại 2", "Email 1", "Email 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGiangVien.setToolTipText("");
        tableGiangVien.setRowHeight(40);
        tableGiangVien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableGiangVien.setShowGrid(true);
        tableGiangVien.setVerifyInputWhenFocusTarget(false);
        tableGiangVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableGiangVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableGiangVien);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    public static boolean isValidBirthDayFormat( String value) {
        String format = "yyyy-MM-dd";
        Locale locale = Locale.ENGLISH;
        LocalDateTime ldt = null;
        DateTimeFormatter fomatter = DateTimeFormatter.ofPattern(format, locale);

        try {
            ldt = LocalDateTime.parse(value, fomatter);
            String result = ldt.format(fomatter);
            return result.equals(value);
        } catch (DateTimeParseException e) {
            try {
                LocalDate ld = LocalDate.parse(value, fomatter);
                String result = ld.format(fomatter);
                return result.equals(value);
            } catch (DateTimeParseException exp) {
                try {
                    LocalTime lt = LocalTime.parse(value, fomatter);
                    String result = lt.format(fomatter);
                    return result.equals(value);
                } catch (DateTimeParseException e2) {
                    // Debugging purposes
                    //e2.printStackTrace();
                }
            }
        }
        return false;
    }
    
    public boolean isValidForm(){
        // Check id:
        if(txtMaGV.getText().strip().isEmpty()){
            JOptionPane.showMessageDialog(this, "Mã giảng viên không được để trống!");
            return false;
        } 
        // Check fullname:
        if(txtHoVaTen.getText().strip().isEmpty()){
            JOptionPane.showMessageDialog(this, "Họ và tên giảng viên không được để trống!");
            return false;
        } else {
            if(!txtHoVaTen.getText().strip().contains(" ")){
               JOptionPane.showMessageDialog(this, "Họ và tên giảng viên không hợp lệ!"); 
            }
        }
        // Check Ngay Sinh
        if(txtNgaySinh.getText().strip().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ngày sinh không được để trống!");
            return false;
        } else {
            if(!isValidBirthDayFormat(txtNgaySinh.getText().strip())){
                JOptionPane.showMessageDialog(this, "Ngày sinh không đúng định dạng (yyyy-MM-dd)!");
                return false;                
            }
        }          
            
        
        // Check SDT 1
        Pattern sdtPattern = Pattern.compile("^\\d{10}$");
        Matcher sdtMatcher = null;
        if(txtSoDienThoai1.getText().strip().isEmpty()){
            JOptionPane.showMessageDialog(this, "Số điện thoại 1 không được để trống!");
            return false;
        } else {
            sdtMatcher = sdtPattern.matcher(txtSoDienThoai1.getText().strip());
            if(!sdtMatcher.find()){
                JOptionPane.showMessageDialog(this, "Số điện thoại 1 phải bao gồm 10 chữ số!");                
            }
        }
        // Check Email 1
        Pattern emailPattern = Pattern.compile("^(.+)@(.+)$");
        Matcher emailMatcher = null;
        if(txtEmail1.getText().strip().isEmpty()){
            JOptionPane.showMessageDialog(this, "Email 1 không được để trống!");
            return false;
        } else {
            emailMatcher = emailPattern.matcher(txtEmail1.getText().strip());
            if(!emailMatcher.find()){
                JOptionPane.showMessageDialog(this, "Email không đúng định dạng!");                
            }
        }        
        return true;
    }
    
    public GiangVien getModel(){
        GiangVien gv = new GiangVien();
        gv.setMaGV(txtMaGV.getText().strip());
        String ho, tenDem = "", ten;
        String[] hoVaTen = txtHoVaTen.getText().strip().split(" ");
        ho = hoVaTen[0];
        ten = hoVaTen[hoVaTen.length - 1];
        for(int i = 1; i <= hoVaTen.length - 2; i++){
            tenDem+=(hoVaTen[i] + " ");
        }
        gv.setHo(ho);
        gv.setTenDem(tenDem.strip());
        gv.setTen(ten);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        Date ngaySinh = null;
        try {
            ngaySinh = formatter.parse(txtNgaySinh.getText());
        } catch (Exception e) {
            e.printStackTrace();
        }
        gv.setNgaySinh(ngaySinh);
        gv.setMaHocVi(comboBoxHocVi.getSelectedItem().toString().split(" - ")[0]);
        gv.setmaQQ(Integer.parseInt(comboBoxMaQQ.getSelectedItem().toString().split(" ")[0]));
        gv.setNghiLam(txtNghiLam.isSelected());
        gv.setSoDienThoai1(txtSoDienThoai1.getText().strip());
        gv.setSoDienThoai2(txtSoDienThoai2.getText().strip());   
        gv.setEmail1(txtEmail1.getText().strip());
        gv.setEmail2(txtEmail2.getText().strip());
        gv.setGhiChu(txtGhiChu.getText().strip());
        return gv;
    }
    public void setModel(GiangVien gv){
        txtMaGV.setText(gv.getMaGV());
        txtHoVaTen.setText(gv.getHo() + " " + (gv.getTenDem() == null ? "" : gv.getTenDem() + " ") + gv.getTen());
        txtNgaySinh.setText(gv.getNgaySinh().toString());
        HocViDAO hvdao = new HocViDAO();
        List<HocVi> listhv = hvdao.getListHocVi();
        String elmHV = null;
        for(HocVi hv: listhv){    
            if(gv.getMaHocVi().equals(hv.getMaHocVi())){
                elmHV = hv.getMaHocVi() + " - " + hv.getTenHocVi();
                comboBoxHocVi.setSelectedItem(elmHV);
            }
        }
        QueQuanDAO qqdao = new QueQuanDAO();
        List<QueQuan> listqq = qqdao.getListQueQuan();
        String elmQQ = null;
        for(QueQuan qq : listqq){
            if(qq.getMaQQ() == gv.getmaQQ()){
                elmQQ = qq.getMaQQ() + " " + qq.getTenQQ();
                comboBoxMaQQ.setSelectedItem(elmQQ);                
            }
        }        
        txtNghiLam.setSelected(gv.isNghiLam());
        txtSoDienThoai1.setText(gv.getSoDienThoai1());
        txtSoDienThoai2.setText(gv.getSoDienThoai2());
        txtEmail1.setText(gv.getEmail1());
        txtEmail2.setText(gv.getEmail2());
        txtGhiChu.setText(gv.getGhiChu());
    }
    public void resetModel(){
        txtMaGV.setText("");
        txtHoVaTen.setText("");
        txtNgaySinh.setText("");
        comboBoxHocVi.setSelectedItem("null - null");
        comboBoxMaQQ.setSelectedItem("null - null");                   
        txtNghiLam.setText("");
        txtSoDienThoai1.setText("");
        txtSoDienThoai2.setText("");
        txtEmail1.setText("");
        txtEmail2.setText("");
        txtGhiChu.setText("");
    }    
    private void txtMaGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaGVActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        GiangVienDAO gvdao = new GiangVienDAO();
        List<GiangVien> listgv = gvdao.getListGiangVien();
        GiangVien gv = getModel();

        try {
            if(isValidForm()){
                if(gvdao.editGiangVienToDB(gv) > 0){
                    gvdao = new GiangVienDAO();
                    listgv = gvdao.getListGiangVien();
                    fillDataTable(listgv);
                    JOptionPane.showMessageDialog(this, "Sửa thành công Giảng viên!");
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa không thành công Giảng viên!");
                }                 
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        GiangVienDAO gvdao = new GiangVienDAO();
        List<GiangVien> listgv = gvdao.getListGiangVien();
        GiangVien gv = getModel();
        try {
                if(isValidForm()){
                    if(gvdao.addGiangVienToDB(gv) > 0){
                        gvdao = new GiangVienDAO();
                        listgv = gvdao.getListGiangVien();
                        fillDataTable(listgv);
                        JOptionPane.showMessageDialog(this, "Thêm thành công Giảng viên!");
                        resetModel();
                    } else {
                        JOptionPane.showMessageDialog(this, "Thêm không thành công Giảng viên!");
                    }                    
                }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void txtNgaySinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgaySinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgaySinhActionPerformed

    private void txtNghiLamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNghiLamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNghiLamActionPerformed

    private void tableGiangVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGiangVienMouseClicked
        // TODO add your handling code here:
        int stt = tableGiangVien.rowAtPoint(evt.getPoint());
        String MaGV = tableGiangVien.getValueAt(stt, 1).toString();
        GiangVienDAO gvdao = new GiangVienDAO();
        GiangVien gv = gvdao.getGiangVienByID(MaGV);
        setModel(gv);
    }//GEN-LAST:event_tableGiangVienMouseClicked

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        GiangVienDAO gvdao = new GiangVienDAO();
        List<GiangVien> listAllGv = gvdao.getListGiangVien();
        List<GiangVien> listFilteredGv = new ArrayList<GiangVien>();
        if(txtMaGV.getText().strip().equals("") && txtHoVaTen.getText().strip().equals("")){
            JOptionPane.showMessageDialog(this, "Nhập Mã / Họ và Tên giảng viên để tìm kiếm!");
        } else {
            for(GiangVien gv: listAllGv){
                if(!txtMaGV.getText().strip().equals("")){
                    if(gv.getMaGV().contains(txtMaGV.getText().strip()) &&
                    (gv.getHo() + " " + (gv.getTenDem() == null ? "" : gv.getTenDem() + " ") + gv.getTen()).contains(txtHoVaTen.getText().strip())){
                        listFilteredGv.add(gv);
                    }
                } else {
                    if((gv.getHo() + " " + (gv.getTenDem() == null ? "" : gv.getTenDem() + " ") + gv.getTen()).contains(txtHoVaTen.getText().strip())){
                        listFilteredGv.add(gv);
                    }
                }
            }    
            fillDataTable(listFilteredGv);
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        GiangVienDAO gvdao = new GiangVienDAO();
       int confirm = JOptionPane.showConfirmDialog(null, 
                "Bạn có chắc chắn muốn xóa?", "Xóa!", JOptionPane.DEFAULT_OPTION);
        // 0=yes, 1=no, 2=cancel
        if(confirm == 0){
            if(gvdao.delGiangVienByID(txtMaGV.getText().strip()) > 0){
                JOptionPane.showMessageDialog(this, "Xóa thành công giảng viên!");
                List<GiangVien> listgv = new GiangVienDAO().getListGiangVien();
                fillDataTable(listgv);
                resetModel();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa không thành công giảng viên!");
            }            
        }       
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnInsert;
    private javax.swing.JComboBox<String> comboBoxHocVi;
    private javax.swing.JComboBox<String> comboBoxMaQQ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableGiangVien;
    private javax.swing.JTextField txtEmail1;
    private javax.swing.JTextField txtEmail2;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHoVaTen;
    private javax.swing.JTextField txtMaGV;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JCheckBox txtNghiLam;
    private javax.swing.JTextField txtSoDienThoai1;
    private javax.swing.JTextField txtSoDienThoai2;
    // End of variables declaration//GEN-END:variables
}
